= form_for(@task, class: "", role: "form") do |task_builder|
  - if @task.errors.any?
    #error_explanation
      %h2= "#{pluralize(@task.errors.count, "error")} prohibited this task from being saved:"
      %ul
        - @task.errors.full_messages.each do |msg|
          %li= msg
  .field
    = task_builder.text_field :name, class: "initial-focus form-control", placeholder: "Task title"
  .field
    = task_builder.select :tag_list, options_for_select(current_user.tags, current_user.most_likely_new_tags), {}, {class: "tag_select", multiple: "multiple", style: "width: 100%"}
  - if view_detail_level > 5
    - if @task.parent.present?
      %div
        = link_to 'parent', task_path(@task.parent), method: :get
  - if view_detail_level > 5
    .row
      .col-xs-12
        %p{style: "text-align: left"}
          How bad
          %i<
            %span>< [
            %span{style: "color: #6c6"}><
              1=shrug;
            %span{style: "color: #e44"}><
              &nbsp;10=catastrophe
            %span>< ]
          %b really,
          if not done within:

    - form_slider("days_imp", task_builder.label(:days))
    - form_slider("weeks_imp", task_builder.label(:weeks))
    - form_slider("ever_imp", task_builder.label(:ever))

  - if view_detail_level > 8
    .field
      = task_builder.label :exp_dur_mins
      = task_builder.text_field :exp_dur_mins
    .field
      = task_builder.label :min_dur_mins
      = task_builder.text_field :min_dur_mins

  - toggleable_form_section(:notes, view_detail_level, 3, 7, task_builder.label(:notes), task_builder.text_area(:notes, style: "width: 100%"))
  - toggleable_form_section(:due, view_detail_level, 3, 7, task_builder.label(:due), task_builder.text_field(:due, id: "due_date_input", class: "form-control"))
  - if defined?(show_children) && !show_children.nil?
    - toggleable_form_section(:children, view_detail_level, 3, 7, task_builder.label(:children), render("children_section", task: @task, task_builder: task_builder) )

  .actions
    = task_builder.submit 'Save'

