
= form_for(@task, class: "form-inline", role: "form") do |task_builder|
  - if @task.errors.any?
    #error_explanation
      %h2= "#{pluralize(@task.errors.count, "error")} prohibited this task from being saved:"
      %ul
        - @task.errors.full_messages.each do |msg|
          %li= msg
  .field
    = task_builder.label :name
    = task_builder.text_field :name, class: "initial-focus"
  - if view_detail_level > 5
    - if @task.parent.present?
      %div
        = link_to 'parent', task_path(@task.parent), method: :get
  - toggleable_form_section(:notes, view_detail_level, 3, 7, task_builder.label(:notes), task_builder.text_area(:notes))
  - toggleable_form_section(:due, view_detail_level, 3, 7, task_builder.label(:due), task_builder.datetime_select(:due))
  - if view_detail_level > 5
    .row
      .field.col-sm-4
        = task_builder.label :days_imp
        %label{"for"=>"days_imp_slider_amount"} Slider val:
        %input{:type=>"hidden", :id=>"days_imp_slider_amount_hidden", :name=>"task[days_imp]"}
        %div{:id=>"days_imp_slider_amount_shown", :style => "border:0; color: #f6931f; font-weight:bold;"}
        #days_imp_slider

    .row
      .field.col-sm-4
        = task_builder.label :weeks_imp
        %label{"for"=>"weeks_imp_slider_amount"} Slider val:
        %input{:type=>"hidden", :id=>"weeks_imp_slider_amount_hidden", :name=>"task[weeks_imp]"}
        %div{:id=>"weeks_imp_slider_amount_shown", :style => "border:0; color: #f6931f; font-weight:bold;"}
        #weeks_imp_slider

    .row
      .field.col-sm-4
        = task_builder.label :ever_imp
        %label{"for"=>"ever_imp_slider_amount"} Slider val:
        %input{:type=>"hidden", :id=>"ever_imp_slider_amount_hidden", :name=>"task[ever_imp]"}
        %div{:id=>"ever_imp_slider_amount_shown", :style => "border:0; color: #f6931f; font-weight:bold;"}
        #ever_imp_slider

  - if view_detail_level > 8
    .field
      = task_builder.label :exp_dur_mins
      = task_builder.text_field :exp_dur_mins
    .field
      = task_builder.label :min_dur_mins
      = task_builder.text_field :min_dur_mins


  - if defined?(show_children) && !show_children.nil?
    / ****************************************
    / DATA: NEW CHILD TASK FORM HTML
    / make fields_html and store in hidden input
    / ****************************************
    - new_child = Task.new
    - new_child.parent = @task
    - new_child.tags = @task.tags # unclear if this will deep copy?
    - new_child_fields_html = task_builder.fields_for(:children, new_child, child_index: new_child.object_id) do |child_builder|
      - render("child_fields", f: child_builder, parent: @task)
    - new_child_fields_html = new_child_fields_html.gsub("\n", "")
    / data-new-child-fields-html is the html you'll need for each new child
    / data-new-child-object-id is just an arbitrary starting string to be the element id of the new elements, temporarily
    %span{style: "visibility: hidden", id: "rails_data_holder", "data-new-child-fields-html" => new_child_fields_html, "data-new-child-object-id" => new_child.object_id, "view-detail-level" => view_detail_level}
    / ****************************************

    #task_children_list_toggle
      %i#task_children_list_toggle_off.fa.fa-caret-right{style: "display: #{show_children == true ? 'none' : 'inline-block'}"}
      %i#task_children_list_toggle_on.fa.fa-caret-down{style: "display: #{show_children == true ? 'inline-block' : 'none'}"}
      children
    %ul#task_children_list.list-unstyled{style: "display: #{show_children == true ? 'inline-block' : 'none'}", "data-update-url" => "#{sort_tasks_url}"}
      = task_builder.fields_for :children do |child_builder|
        - render("child_fields", f: child_builder, parent: @task)
    .links
      /= link_to_add_association 'add child', task_builder, :children
      = link_to("Add child", '#', class: "add_child")

  .actions
    = task_builder.submit 'Save'

