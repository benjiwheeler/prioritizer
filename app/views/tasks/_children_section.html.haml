/ ****************************************
/ DATA: NEW CHILD TASK FORM HTML
/ make fields_html and store in hidden input
/ ****************************************
- new_child = Task.new
- new_child.parent = task
- new_child.tags = task.tags # unclear if this will deep copy?
- new_child_fields_html = task_builder.fields_for(:children, new_child, child_index: new_child.object_id) do |child_builder|
  - render("child_fields", f: child_builder, parent: task)
- new_child_fields_html = new_child_fields_html.gsub("\n", "")
/ data-new-child-fields-html is the html you'll need for each new child
/ data-new-child-object-id is just an arbitrary starting string to be the element id of the new elements, temporarily
%span{style: "visibility: hidden", id: "rails_data_holder", "data-new-child-fields-html" => new_child_fields_html, "data-new-child-object-id" => new_child.object_id}
/ ****************************************

/ #task_children_list_toggle
/   %i#task_children_list_toggle_off.fa.fa-caret-right{style: "display: #{show_children == true ? 'none' : 'inline-block'}"}
/   %i#task_children_list_toggle_on.fa.fa-caret-down{style: "display: #{show_children == true ? 'inline-block' : 'none'}"}
/   children
%ul#task_children_list.list-unstyled{"data-update-url" => "#{sort_tasks_url}"}
  = task_builder.fields_for :children do |child_builder|
    - render("child_fields", f: child_builder, parent: task)
.links
  /= link_to_add_association 'add child', task_builder, :children
  = link_to("Add child", '#', class: "add_child")
